---
import { cn } from "../lib/utils";
interface Props extends astroHTML.JSX.ButtonHTMLAttributes {
  text: string;
  color?: string;
}
const { text, class: className, color = "db5c4c", ...props } = Astro.props;

// Function to adjust colors based on the main color
function generateColorVariants(baseColor: string) {
  // Default to green if not a valid hex
  const hexColor = baseColor.startsWith("#") ? baseColor : "#db5c4c";

  // Convert hex to RGB
  const r = parseInt(hexColor.slice(1, 3), 16);
  const g = parseInt(hexColor.slice(3, 5), 16);
  const b = parseInt(hexColor.slice(5, 7), 16);

  // Create darker variants for shadows and borders
  const darken = (amount: number) => {
    return `#${Math.max(0, Math.floor(r * amount))
      .toString(16)
      .padStart(2, "0")}${Math.max(0, Math.floor(g * amount))
      .toString(16)
      .padStart(2, "0")}${Math.max(0, Math.floor(b * amount))
      .toString(16)
      .padStart(2, "0")}`;
  };

  // Generate shadow and border colors
  const shadowColor = darken(0.7);
  const deepShadowColor = darken(0.5);
  const borderColor = `rgba(${Math.floor(r * 0.7)},${Math.floor(g * 0.7)},${Math.floor(b * 0.7)},0.5)`;

  return {
    baseColor: hexColor,
    shadowColor,
    deepShadowColor,
    borderColor,
  };
}

// Get the actual color value
const colors = generateColorVariants(color);
---

<button
  type="button"
  class={cn(
    "game-button rounded-lg px-4 py-2 relative -top-[10px] w-28 h-16 my-3 text-white cursor-pointer",
    "before:absolute before:top-[5%] before:left-[40%] before:bg-white before:w-[40%] before:h-1 before:rounded-full",
    "after:absolute after:top-[5%] after:left-[85%] after:bg-white after:w-[10%] after:h-1 after:rounded-full",
    className
  )}
  {...props}
  style={`--base-color:${colors.baseColor};--shadow-color:${colors.shadowColor};--deep-shadow-color:${colors.deepShadowColor};--border-color:${colors.borderColor};`}
>
  {text}
</button>

<style is:global>
  .game-button {
    background: var(--base-color);
    box-shadow:
      0 6px 0 var(--shadow-color),
      0 8px 1px 1px rgba(0, 0, 0, 0.3),
      0 10px 0 5px var(--deep-shadow-color),
      0 12px 0 5px var(--shadow-color),
      0 15px 0 5px var(--deep-shadow-color),
      0 15px 1px 6px rgba(0, 0, 0, 0.3);
    border-bottom: 3px solid var(--border-color);
    text-shadow:
      2px 2px 1px var(--shadow-color),
      -2px 2px 1px var(--shadow-color),
      2px -2px 1px var(--shadow-color),
      -2px -2px 1px var(--shadow-color),
      0px 2px 1px var(--shadow-color),
      0px -2px 1px var(--shadow-color),
      0px 4px 1px var(--deep-shadow-color),
      2px 4px 1px var(--deep-shadow-color),
      -2px 4px 1px var(--deep-shadow-color);
  }

  .game-button:hover {
    top: -8px;
    box-shadow:
      0 4px 0 var(--shadow-color),
      0 6px 1px 1px rgba(0, 0, 0, 0.3),
      0 8px 0 5px var(--deep-shadow-color),
      0 10px 0 5px var(--shadow-color),
      0 13px 0 5px var(--shadow-color),
      0 13px 1px 6px rgba(0, 0, 0, 0.3);
  }
</style>
