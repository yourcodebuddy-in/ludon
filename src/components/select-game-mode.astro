---
import { cn } from "../lib/utils";
---

<div class="space-y-5 border-b border-gray-300 pb-5 mb-5">
  <h2 class="text-center text-xl">Choose a mode</h2>
  <div
    class={cn(
      "grid grid-cols-3 justify-center border-2 border-ludon-green rounded-full w-[300px] h-[45px] font-bold mx-auto",
      "*:flex *:justify-center *:items-center",
      "*:aria-selected:bg-ludon-green *:aria-selected:text-white"
    )}
  >
    <div id="one-vs-one" aria-selected="true" class="rounded-l-full border-r border-black">1 vs 1</div>
    <div id="one-vs-two">1 vs 2</div>
    <div id="one-vs-three" class="rounded-r-full border-l border-black">1 vs 3</div>
  </div>
</div>

<script>
  const options = ["one-vs-one", "one-vs-two", "one-vs-three"].map((id) => document.getElementById(id));
  const sections = ["one-vs-one-options", "one-vs-two-options", "one-vs-three-options"].map((id) =>
    document.getElementById(id)
  );

  // Initialize from session storage or default to first option
  let savedOption = sessionStorage.getItem("game-option");
  if (!savedOption) {
    sessionStorage.setItem("game-option", "one-vs-one");
    savedOption = "one-vs-one";
  }

  // Function to update UI based on selected option
  function updateUI(selectedId: string) {
    // Update tabs
    options.forEach((option) => {
      if (option) {
        option.setAttribute("aria-selected", option.id === selectedId ? "true" : "false");
      }
    });

    // Show/hide sections
    sections.forEach((section) => {
      if (section) {
        section.classList.toggle("hidden", section.id !== `${selectedId}-options`);
      }
    });
  }

  // Set initial UI state
  updateUI(savedOption);

  // Add click handlers
  options.forEach((option) => {
    if (option) {
      option.addEventListener("click", () => {
        // Update UI
        updateUI(option.id);

        // Save to session storage
        sessionStorage.setItem("game-option", option.id);
      });
    }
  });
</script>
